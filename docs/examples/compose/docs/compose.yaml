version: '3'
services:
  postgresql:
    image: postgres:16
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "docs", "-d", "docs"]
      interval: 1s
      timeout: 2s
      retries: 300
    env_file:
      - env.d/postgresql
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./data/databases/backend:/var/lib/postgresql/data/pgdata

  redis:
    image: redis:5

  backend-migration:
    image: lasuite/impress-backend:latest
    user: ${DOCKER_USER:-1000}
    command: ["python", "manage.py", "migrate", "--noinput"]
    environment:
      - DJANGO_CONFIGURATION=Production
    env_file:
      - env.d/backend
      - env.d/postgresql
      - env.d/yprovider
    depends_on:
      postgresql:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started

  backend:
    image: lasuite/impress-backend:latest
    user: ${DOCKER_USER:-1000}
    restart: always
    environment:
      - DJANGO_CONFIGURATION=Production
    env_file:
      - env.d/backend
      - env.d/postgresql
      - env.d/yprovider
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 15s
      timeout: 30s
      retries: 20
      start_period: 10s
    depends_on:
      postgresql:
        condition: service_healthy
        restart: true
      backend-migration:
        condition: service_completed_successfully
      redis:
        condition: service_started

  frontend:
    image: lasuite/impress-frontend:latest
    user: ${DOCKER_USER:-1000}
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d:ro

  y-provider:
    image: lasuite/impress-y-provider:latest
    user: ${DOCKER_USER:-1000}
    env_file:
      - env.d/yprovider
